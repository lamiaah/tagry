"""
Django settings for tagry project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import json

# with open('/etc/config.json') as config_file:
#     config = json.load(config_file)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


# SECRET_KEY = config['SECRET_KEY']
SECRET_KEY = 'django-insecure-kzzma349a2#b#x695awc31#bv-!e$-e5rv401j7*q&5=!j0t_9'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['162.0.236.152','tajiry.com','127.0.0.1']
#'127.0.0.1'


# Application definition

INSTALLED_APPS = [
    'ads.apps.AdsConfig',
    'stores.apps.StoresConfig',
    'orders.apps.OrdersConfig',
    'copun.apps.CopunConfig',
    'buyer.apps.BuyerConfig',
    'productkeyword.apps.ProductkeywordConfig',
    'popular.apps.PopularConfig',
    'area.apps.AreaConfig',
    'paymentoptions.apps.PaymentoptionsConfig',
    'paymentcurrency.apps.PaymentcurrencyConfig',
    'cities.apps.CitiesConfig',
    'countries.apps.CountriesConfig',
    'languages.apps.LanguagesConfig',
    'users.apps.UsersConfig',
    'categories.apps.CategoriesConfig',
    'favorite.apps.FavoriteConfig',
    'noti.apps.NotiConfig',
    'offers.apps.OffersConfig',
    'payment_transactions.apps.PaymentTransactionsConfig',
    'products.apps.ProductsConfig',
    'purchase.apps.PurchaseConfig',
    'recently_view.apps.RecentlyViewConfig',
    'review.apps.ReviewConfig',
    'seller_user.apps.SellerUserConfig',
    'shopping_cart.apps.ShoppingCartConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'crispy_forms',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
]


REST_FRAMEWORK = {
    'DEFAULT_PERMISSIONS_CLASSES':[
        'rest_framework.permissions.IsAuthenticated',
    ] ,

    'DEFAULT_AUTHENTICATION_CLASSES':[
        'rest_framework.authentication.TokenAuthentication',
    ]  
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tagry.urls'
AUTH_USER_MODEL = 'users.CustomUser'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates',],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tagry.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATE_INPUT_FORMATS = ('%d-%m-%Y','%Y-%m-%d')
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATIC_URL ='/static/'
STATICFILES_DIRS = [
   os.path.join(BASE_DIR, 'static'),
]
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA ='/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



CRISPY_TEMPLATE_PACK = 'bootstrap4'
LOGIN_REDIRECT_URL = 'base'
LOGOUT_REDIRECT_URL = 'login'
LOGIN_URL = 'login'
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


